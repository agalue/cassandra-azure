##############################################################################
# Bootstrap process
# Author: Alejandro Galue <agalue@opennms.org>
##############################################################################

---
- name: Start Cassandra Cluster in sequence
  hosts: cassandra_servers
  become: true
  order: sorted
  serial: 1
  tasks:
  - name: Start Cassandra Service
    when: cassandra.vendor_repo == 'apache'
    sysvinit: # Cassandra doesn't offer a systemd service definition
      name: cassandra
      state: started
      enabled: yes
  - name: Start Scylla Server Service
    when: cassandra.vendor_repo == 'scylla'
    service:
      name: '{{ item }}'
      state: started
      enabled: yes
    loop:
    - scylla-server
    - scylla-jmx
  - name: Wait while node joins the cluster
    shell: 'set -o pipefail && nodetool -u cassandra -pw cassandra status 2>/dev/null | grep {{ target_ipv4 }}'
    changed_when: False
    register: result
    until: result.stdout is regex("^UN.*")
    delay: 30
    retries: 10

# This runs once, from the first host in the cluster.
- name: Configure keyspace for Newts
  hosts: cassandra1
  environment: # Required by Cassandra
    PYTHONPATH: /usr/lib/python2.7/site-packages/
  tasks:
  - name: Install and configure Cortex
    when: tss_strategy != 'cortex'
    block:
    - name: Check if keyspace exists
      shell: 'set -o pipefail && echo "describe keyspaces" | cqlsh {{ target_ipv4 }}'
      register: keyspaces
      changed_when: False
    - name: Create keyspace
      when: not "newts" in keyspaces.stdout
      command: 'cqlsh {{ target_ipv4 }} -f {{ "/etc/scylla" if cassandra.vendor_repo == "scylla" else "/etc/cassandra/conf" }}/newts.cql'

- name: Start Cortex load Balancer
  hosts: envoy_servers
  ignore_unreachable: true
  become: true
  tasks:
  - name: Start Envoy Service
    when: tss_strategy == 'cortex'
    service:
      name: envoy
      state: started
      enabled: yes

- name: Start Cortex
  hosts: cortex_servers
  ignore_unreachable: true
  become: true
  tasks:
  - name: Start Cortex Service
    when: tss_strategy == 'cortex'
    service:
      name: '{{ item }}'
      state: started
      enabled: yes
    loop:
    - consul
    - cortex

- name: Start OpenNMS
  hosts: onms_servers
  become: true
  vars:
    requisition_name: Inventory
  tasks:
  - name: Start Services
    service:
      name: '{{ item }}'
      state: started
      enabled: yes
    loop:
    - opennms
    - grafana-server
